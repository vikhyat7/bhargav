<?php
/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */

// @codingStandardsIgnoreFile

?>

<?php
$_htmlId = $block->getHtmlId() ? $block->getHtmlId() : '_' . uniqid();
$_colspan = $block->isAddAfter() ? 2 : 1;
?>

<div class="design_theme_ua_regexp" id="grid<?= /* @escapeNotVerified */ $_htmlId ?>">
    <div class="admin__control-table-wrapper">
        <table class="admin__control-table" id="<?= /* @escapeNotVerified */ $block->getElement()->getId() ?>">
            <thead>
            <tr>
                <?php foreach ($block->getColumns() as $columnName => $column): ?>
                    <th><?= /* @escapeNotVerified */ $column['label'] ?></th>
                <?php endforeach;?>
                <th class="col-actions" colspan="<?= /* @escapeNotVerified */ $_colspan ?>">Action</th>
            </tr>
            </thead>
            <tfoot>
            <tr>
                <td colspan="<?= count($block->getColumns())+$_colspan ?>" class="col-actions-add">
                    <button id="addToEndBtn<?= /* @escapeNotVerified */ $_htmlId ?>" class="action-add" title="<?= /* @escapeNotVerified */ __('Add') ?>" type="button">
                        <span><?= /* @escapeNotVerified */ $block->getAddButtonLabel() ?></span>
                    </button>
                </td>
            </tr>
            </tfoot>
            <tbody id="addRow<?= /* @escapeNotVerified */ $_htmlId ?>"></tbody>
        </table>
    </div>
    <input type="hidden" name="<?= /* @escapeNotVerified */ $block->getElement()->getName() ?>[__empty]" value="" />

    <script>
        require([
            'mage/template',
            'prototype'
        ], function (mageTemplate) {

            var allWebposLocations = <?php echo json_encode($block->_getWebposLocationRenderer()->getOptionArray()) ?>;


            // create row creator
            window.arrayRow<?= /* @escapeNotVerified */ $_htmlId ?> = {

                // define row prototypeJS template
                template: mageTemplate(
                    '<tr id="<%- _id %>">'
                    <?php foreach ($block->getColumns() as $columnName => $column): ?>
                    + '<td>'
                    + '<?= /* @escapeNotVerified */ $block->renderCellTemplate($columnName) ?>'
                    + '<\/td>'
                    <?php endforeach; ?>

                    <?php if ($block->isAddAfter()): ?>
                    + '<td><button class="action-add" type="button" id="addAfterBtn<%- _id %>"><span><?= /* @escapeNotVerified */ __('Add after') ?><\/span><\/button><\/td>'
                    <?php endif; ?>

                    + '<td class="col-actions"><button onclick="arrayRow<?= /* @escapeNotVerified */ $_htmlId ?>.del(\'<%- _id %>\')" class="action-delete" type="button"><span><?= /* @escapeNotVerified */ __('Delete') ?><\/span><\/button><\/td>'
                    +'<\/tr>'
                ),

                /**
                 *
                 * @param excludeIds
                 * @return {Array}
                 */
                getSelectedWebposLocations: function (excludeIds) {
                    excludeIds = excludeIds || [];
                    var selectedWebposLocations = [];
                    jQuery('#row_webpos_payment_zippay_location select').each(function(key, el)  {

                        if (
                            !excludeIds.length
                            || (excludeIds.length && excludeIds.indexOf(jQuery(el).closest('tr').attr('id')) === -1)
                        ) {
                            selectedWebposLocations.push(el.value);
                        }
                    });

                    return selectedWebposLocations;
                },
                /**
                 *  update all options
                 */
                updateOptions: function () {
                    var selectedWebposLocations = this.getSelectedWebposLocations();
                    jQuery('#row_webpos_payment_zippay_location select').each(function(key, el)  {
                        var oldVal = el.value;
                        var $el = jQuery(el).empty();
                        jQuery.each(allWebposLocations, function(key, value) {
                            if (
                                ( selectedWebposLocations.indexOf(key) === -1 )
                                || (key === oldVal)
                            ) {
                                $el.append(jQuery("<option></option>")
                                    .attr("value", key).text(value));
                            }
                        });

                        $el.val(oldVal);
                    });
                },

                add: function(rowData, insertAfterId) {
                    if (Object.keys(allWebposLocations).length === this.getSelectedWebposLocations().length) {
                        return;
                    }

                    // generate default template data
                    var templateValues;

                    // Prepare template values
                    if (rowData) {
                        templateValues = rowData;
                    } else {
                        var d = new Date();
                        templateValues = {
                        <?php foreach ($block->getColumns() as $columnName => $column): ?>
                        <?= /* @escapeNotVerified */ $columnName ?>: '',
                            'option_extra_attrs': {},
                        <?php endforeach; ?>
                        _id: '_' + d.getTime() + '_' + d.getMilliseconds()
                    };
                    }

                    // Insert new row after specified row or at the bottom
                    if (insertAfterId) {
                        Element.insert($(insertAfterId), {after: this.template(templateValues)});
                    } else {
                        Element.insert($('addRow<?= /* @escapeNotVerified */ $_htmlId ?>'), {bottom: this.template(templateValues)});
                    }

                    // Fill controls with data
                    if (rowData) {
                        var rowInputElementNames = Object.keys(rowData.column_values);
                        for (var i = 0; i < rowInputElementNames.length; i++) {
                            if ($(rowInputElementNames[i])) {
                                $(rowInputElementNames[i]).setValue(rowData.column_values[rowInputElementNames[i]]);
                            }
                        }
                    } else {
                        var selectedWebposLocations = this.getSelectedWebposLocations([templateValues._id]);

                        jQuery('#' + templateValues._id + ' select').each(function(index, el)  {
                            var $el = jQuery(el);
                            jQuery.each(allWebposLocations, function(key, value) {
                                if (selectedWebposLocations.indexOf(key) === -1) {
                                    $el.val(key)
                                }
                            });
                        });

                        this.updateOptions();
                    }



                    // Add event for {addAfterBtn} button
                    <?php if ($block->isAddAfter()): ?>
                    Event.observe('addAfterBtn' + templateValues._id, 'click', this.add.bind(this, false, templateValues._id));
                    <?php endif; ?>
                },

                del: function(rowId) {
                    $(rowId).remove();
                    this.updateOptions();
                }
            };

            // bind add action to "Add" button in last row
            Event.observe('addToEndBtn<?= /* @escapeNotVerified */ $_htmlId ?>', 'click', arrayRow<?= /* @escapeNotVerified */ $_htmlId ?>.add.bind(arrayRow<?= /* @escapeNotVerified */ $_htmlId ?>, false, false));

            // add existing rows
            <?php
            foreach ($block->getArrayRows() as $_rowId => $_row) {
                /* @escapeNotVerified */ echo "arrayRow{$_htmlId}.add(" . $_row->toJson() . ");\n";
            }
            ?>

            <?php
            if (count($block->getArrayRows())) {
                /* @escapeNotVerified */ echo "arrayRow{$_htmlId}.updateOptions();\n";
            }
            ?>

            // Toggle the grid availability, if element is disabled (depending on scope)
            <?php if ($block->getElement()->getDisabled()):?>
            toggleValueElements({checked: true}, $('grid<?= /* @escapeNotVerified */ $_htmlId ?>').parentNode);
            <?php endif;?>
        });
    </script>
</div>
