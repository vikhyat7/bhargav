<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="PaymentCashInPartialTest">
        <annotations>
            <features value="Payment"/>
            <stories value="Cash in - Partial payment"/>
            <title value="Partial payment with Cash"/>
            <description value="Partial payment with method: Cash"/>
            <severity value="CRITICAL"/>
            <testCaseId value="SPM-02"/>
            <group value="CashInPartialPayment"/>
            <group value="pwapos"/>
        </annotations>
        <before>
            <actionGroup ref="PosOnCheckoutPage" stepKey="PosOnCheckoutPage"/>
        </before>
        <actionGroup ref="DisablePrintPopup" stepKey="DisablePrintPopup"/>

        <actionGroup ref="AddProductAndCharge" stepKey="AddProductAndCharge">
            <argument name="dataProduct" value="pos_simple_product_2" />
        </actionGroup>

        <waitForElementVisible selector="{{PosCheckoutPaymentSection.cash}}" time="120" stepKey="waitCashPaymentVisible"/>

        <actionGroup ref="PosPaymentEnterCash" stepKey="enterCash">
            <argument name="amount" value="10.00"/>
        </actionGroup>

        <!-- Check: Display Remaining amount = $0.00 -->
        <grabTextFrom selector="{{PosCheckoutPaymentSection.totalLabel}}" stepKey="grabTotalPaymentLabel"/>
        <grabTextFrom selector="{{PosCheckoutPaymentSection.totalValue}}" stepKey="grabTotalPaymentValue"/>
        <assertEquals message="Remaining total label is correct." stepKey="compareRemainingTotalLabel">
            <expectedResult type="string">Remaining</expectedResult>
            <actualResult type="variable">grabTotalPaymentLabel</actualResult>
        </assertEquals>
        <assertEquals message="Remaining total value is correct." stepKey="compareRemainingTotalValue">
            <expectedResult type="string">$24.64</expectedResult>
            <actualResult type="variable">grabTotalPaymentValue</actualResult>
        </assertEquals>
        <!-- End Check: Display Remaining amount = $0.00 -->
        <!-- Check: Show the button that named as Complete Order -->
        <grabTextFrom selector="{{CheckoutSection.CompleteOrder}}" stepKey="grabCompleteButtonLabel"/>
        <assertEquals message="Complete button label is correct." stepKey="compareCompleteButtonLabel">
            <expectedResult type="string">Mark as Partial</expectedResult>
            <actualResult type="variable">grabCompleteButtonLabel</actualResult>
        </assertEquals>
        <!-- End Check: Show the button that named as Complete Order -->

        <!--Partial button and confirm order-->
        <waitForElementVisible selector="{{PosCheckoutPaymentSection.addPayment}}" time="120" stepKey="addPaymentCheck"/>
        <seeElement selector="{{PosCheckoutPaymentSection.addPayment}}" stepKey="addPaymentSee" />
        <click selector="{{PosCheckoutPaymentSection.partial}}" stepKey="clickPartial"/>

        <waitForElementVisible selector="{{CheckoutSection.popupConfirmPartial}}" time="120" stepKey="waitPopupConfirmedPartial"/>
        <waitForElementVisible selector="{{CheckoutSection.popupConfirmPartialButtonComplete}}" time="120" stepKey="waitButtonCompleteButtonVisible"/>
        <wait time="1" stepKey="waitBeforeClickComplete"/>
        <click selector="{{CheckoutSection.popupConfirmPartialButtonComplete}}" stepKey="clickToCompleteButton"/>
        <!--End of partial button and confirm order-->

        <waitForElementNotVisible selector="{{PosCheckoutPaymentSection.popupCompleteOrder}}" time="120" stepKey="popupCompleteWaitNotVisible"/>
    </test>
</tests>
